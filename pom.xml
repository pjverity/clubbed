<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.co.vhome</groupId>
	<artifactId>reigate-mens-joggers</artifactId>
	<packaging>war</packaging>
	<version>1.1.0</version>

	<name>Reigate Mens Joggers</name>

	<url>https://github.com/pjverity/${project.artifactId}</url>

	<scm>
		<connection>scm:git:https://github.com/pjverity/${project.artifactId}.git</connection>
		<developerConnection>scm:git:https://github.com/pjverity/${project.artifactId}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>9</maven.compiler.source>
		<maven.compiler.target>9</maven.compiler.target>

		<junit.jupiter.version>5.1.1</junit.jupiter.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>uk.co.vhome.clubbed</groupId>
				<artifactId>clubbed-bom</artifactId>
				<version>3.3.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.0.6.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- At runtime, the container will overlay the contents of the below war with this projects war -->
		<dependency>
			<groupId>uk.co.vhome.clubbed</groupId>
			<artifactId>clubbed-web-common</artifactId>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>uk.co.vhome.clubbed</groupId>
			<artifactId>clubbed-web-common</artifactId>
			<classifier>classes</classifier>
		</dependency>

		<!-- This hooks in to the compiler and catches constraint violations at compile time p.457-->
		<!-- Marked as optional as it isn't required at runtime and we don't want it inherited -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<version>6.0.2.Final</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>

		<!--
		Override the version that spring-boot-starter-mail pulls in. This is
		to be provided by the container. It is loaded by the containers class
		loader. If we used the one Spring pulled in, the JNDI call to obtain
		the mail Session would result in a ClassCastException when it attempts
		to cast a Session instance to another, but loaded by a different ClassLoader
		-->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>uk.co.vhome.clubbed</groupId>
			<artifactId>clubbed-events</artifactId>
		</dependency>

		<dependency>
			<groupId>uk.co.vhome.clubbed</groupId>
			<artifactId>clubbed-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.10.0</version>
				<configuration>
					<commitMessages>
						<featureStartMessage>[gitflow-maven-plugin] Updated feature branch to version @{version}</featureStartMessage>
						<featureFinishMessage>[gitflow-maven-plugin] Reset develop branch to version @{version}</featureFinishMessage>

						<releaseStartMessage>[gitflow-maven-plugin] Updated release branch to version @{version}</releaseStartMessage>
						<releaseFinishMessage>[gitflow-maven-plugin] Incremented develop branch to version @{version}</releaseFinishMessage>

						<hotfixStartMessage>[gitflow-maven-plugin] Updated hotfix branch to version @{version}</hotfixStartMessage>
						<hotfixFinishMessage>[gitflow-maven-plugin] Incremented master branch to version @{version}</hotfixFinishMessage>
					</commitMessages>

					<!-- Increment the minor version on develop after releases -->
					<versionDigitToIncrement>1</versionDigitToIncrement>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
			</plugin>

			<!--
				Use the Tomcat plugin to deploy the WAR to the server for the world to see!
			-->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<!-- Check /etc/hosts if accessing via VPN -->
					<url>http://server.local:${tomcat.port}/manager/text</url>
					<server>TomcatServer</server>
					<path>/rmj</path>
				</configuration>
			</plugin>

			<!-- Currently no remote repository to deploy artifacts to, so configure the plugin to skip deployment -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<overlays>
						<overlay>
							<groupId>uk.co.vhome.clubbed</groupId>
							<artifactId>clubbed-web-common</artifactId>
						</overlay>
					</overlays>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>overlays</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
